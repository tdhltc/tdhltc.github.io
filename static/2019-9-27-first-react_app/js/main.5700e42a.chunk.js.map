{"version":3,"sources":["reducers/task.reducer.js","configs/action.types.js","reducers/oldtask.reducer.js","reducers/index.js","components/tasklist/tasklist.styles.js","components/tasklist/tasklist.jsx","components/taskitem/taskitem.styles.js","components/taskitem/taskitem.jsx","components/taskitem/index.jsx","actions/index.js","components/tasklist/index.jsx","components/taskform/taskform.styles.js","components/taskform/taskform.jsx","components/taskform/index.jsx","components/footer/footer.styles.js","components/footer/index.jsx","theming/app.theme.js","components/app/styles.js","components/app/index.jsx","serviceWorker.js","index.jsx"],"names":["initState","id","start","title","status","s3","Math","floor","random","toString","substring","myReducer","state","arguments","length","undefined","action","type","newtask","concat","Date","toLocaleString","Object","toConsumableArray","reduce","acc","curr","deletedTaskId","push","a","editedStatusTaskId","console","log","editedTask","b","oldTask","combineReducers","taskReducer","oldtaskReducer","styles","outerTheme","withStyles","_ref","props","esm_extends","react_default","createElement","Grid","container","justify","spacing","item","xs","List","component","aria-label","children","taskitem","color","palette","primary","main","classes","task","handleDeleteTask","handleEditStatusTask","handleGetOldTask","handleResetForm","ListItem","button","className","ListItemText","secondary","ListItemSecondaryAction","IconButton","edge","onClick","Done_default","Edit_default","Delete_default","connect","dispatch","onDeleteTask","taskid","onEditStatusTask","onGetOldTask","onResetFormState","tasks","tasklist","components_taskitem","key","Divider","light","textField","oldtask","_useState","useState","_useState2","slicedToArray","setTitle","handleSubmit","useCallback","e","preventDefault","handleEditTitleTask","handleResetFormState","handleAddTask","handleInputValue","_ref2","value","target","useEffect","addform","noValidate","autoComplete","onSubmit","TextField","margin","variant","fullWidth","placeholder","helperText","label","onChange","TaskForm","taskform","onAddTask","onEditTitleTask","defaultProps","link","bottom","background","icon","BottomNavigation","BottomNavigationAction","Home_default","theme","createMuiTheme","breakpoints","direction","mixins","overrides","error","red","inherit","disabled","typography","factor","shape","transitions","zIndex","store","createStore","es","ThemeProvider","root","components_taskform","components_tasklist","footer","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5700e42a.chunk.js","sourcesContent":["\nimport * as types from '../configs/action.types'\n\n// const initState = []\n\n\n// for example\nconst initState = [\n    {\n        id: 'abc1-id',\n        start: '9/16/2019, 20:20:30 AM',\n        title: 'abc1',\n        status: false\n    },\n    {\n        id: 'abc2-id',\n        start: '9/16/2019, 20:20:30 AM',\n        title: 'abc2',\n        status: true\n    }\n]\n\n// state's format\n// [{\n//     id: 'xxx-xxx',\n//     title: 'a string',\n//     start: 'a date time',\n//     status: true/false\n// }]\n\n\n\nconst generateID = ()=>{\n    return `${s3()}-${s3()}`\n}\n\nconst s3 = ()=>{\n    return Math.floor(\n        (1-Math.random())*0x10000\n    ).toString(16).substring(1)\n}\n\n/**\n * Send task list to store\n * @param {*} state\n * @param {*} action\n */\nconst myReducer = (state=initState, action)=>{\n    switch (action.type){\n\n        case types.LIST_ALL:\n            return state\n\n        case types.ADD_NEW_TASK:\n            const newtask = {\n                id: generateID(),\n                title: action.newtask,\n                status: false,\n                start: new Date().toLocaleString()\n            }\n            // console.log(newtask)\n            return [\n                ...state,\n                newtask\n            ]\n\n        case types.DELETE_TASK:\n            return state.reduce(\n                (acc, curr)=>{\n                    if(curr.id !== action.deletedTaskId){\n                        acc.push(curr)\n                    }\n                    return acc\n                },\n                []\n            )\n\n        case types.EDIT_STATUS_TASK:\n            const a =  state.reduce(\n                (acc, curr)=>{\n                    if(curr.id !== action.editedStatusTaskId){\n                        acc.push(curr)\n                    } else {\n                        acc.push({\n                            id: curr.id,\n                            title: curr.title,\n                            status: !curr.status,\n                            start: curr.start,\n                        })\n                    }\n                    return acc\n                },\n                []\n            )\n            console.log(a)\n            return a\n\n\n        case types.EDIT_TITLE_TASK:\n            console.log(action.editedTask)\n            const b = state.reduce(\n                (acc, curr)=>{\n                    if(curr.id !== action.editedTask.id){\n                        acc.push(curr)\n                    } else {\n                        acc.push({\n                            id: curr.id,\n                            title: action.editedTask.title,\n                            status: curr.status,\n                            start: curr.start,\n                        })\n                    }\n                    return acc\n                },\n                []\n            )\n            console.log(b)\n            return b\n\n        default: return state\n    }\n}\n\n\nexport default myReducer\n","export const LIST_ALL = 'LIST_ALL'\nexport const ADD_NEW_TASK = 'ADD_NEW_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const EDIT_STATUS_TASK = 'EDIT_STATUS_TASK'\nexport const EDIT_TITLE_TASK = 'EDIT_TITLE_TASK'\nexport const GET_OLD_TASK = 'GET_OLD_TASK'\nexport const RESET_FORM_STATE = 'RESET_FORM_STATE'\n\n","\nimport * as types from '../configs/action.types'\n\nconst initState = {\n    id: '',\n    title: '',\n}\n\n/**\n * handle old task and send to store\n * @param {*} state\n * @param {*} action\n */\nconst myReducer = (state=initState, action)=>{\n\n    switch(action.type){\n\n        case types.GET_OLD_TASK:\n            console.log('action')\n            return action.oldTask\n\n        case types.RESET_FORM_STATE:\n            return {id:'', title: ''}\n\n        default:\n            return state\n    }\n}\n\nexport default myReducer\n","\n\n\nimport {combineReducers} from 'redux'\n\nimport taskReducer from './task.reducer'\nimport oldtaskReducer from './oldtask.reducer'\n\nconst myReducer = combineReducers({\n    taskReducer,\n    oldtaskReducer,\n})\n\n\n\nexport default myReducer\n","\nconst styles = outerTheme=>({})\n\nexport default styles\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/styles'\n\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\n\nimport styles from './tasklist.styles'\n\n\n/**\n *\n * @param {*} children\n */\nconst PresentationTaskList = ({...props})=>{\n    return (\n        <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={6}>\n            <List\n                component=\"nav\"\n                aria-label=\"main mailbox folders\"\n            >{props.children}</List>\n            </Grid>\n        </Grid>\n\n    )\n}\n\n\n\nexport default withStyles(styles)(PresentationTaskList)\n","\nconst styles = outerTheme=>({\n    taskitem: {\n        color: outerTheme.palette.primary.main,\n    }\n})\n\nexport default styles\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/styles'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport DoneIcon from '@material-ui/icons/Done'\nimport EditIcon from '@material-ui/icons/Edit'\n\n\nimport styles from './taskitem.styles'\n\n\n\n/**\n *\n * @param {*} task from parent compoent\n * @param {*} handleDeleteTask from parent compoent\n * @param {*} handleEditStatusTask from parent compoent\n * @param {*} classes from mui\n *\n *\n */\n\nconst TaskItem = ({...props})=>{\n\n    const {\n        classes,\n        task,\n        handleDeleteTask,\n        handleEditStatusTask,\n        handleGetOldTask,\n        handleResetForm,\n    } = props\n\n    const onEditState = () => {\n        handleResetForm()\n        handleEditStatusTask(task.id)\n    }\n    const onDeleteState = () => {\n        handleResetForm()\n        handleDeleteTask(task.id)\n    }\n\n    return (\n        <ListItem button className={classes.taskitem}>\n            <ListItemText\n                id={task.id}\n                primary={task.title}\n                secondary={task.start}\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    aria-label=\"done\"\n                    // onClick={()=>handleEditStatusTask(task.id)}\n                    onClick = {onEditState}\n                >\n                    <DoneIcon color={task.status ? \"action\" : \"secondary\"} />\n\n                </IconButton>\n\n                <IconButton\n                    edge=\"end\"\n                    aria-label=\"edit-title\"\n                    onClick={()=>handleGetOldTask({id: task.id, title: task.title})}\n                >\n                    <EditIcon color=\"secondary\" />\n                </IconButton>\n\n                <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    // onClick={()=>handleDeleteTask(task.id)}\n                    onClick={onDeleteState}\n                >\n                    <DeleteIcon color=\"secondary\" />\n                </IconButton>\n\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\n\nexport default withStyles(styles)(TaskItem)\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nimport { connect } from 'react-redux'\n\nimport * as actions from './../../actions'\n\nimport PresentationTaskItem from './taskitem'\n\n\n\n\n/**\n *\n * @param {object} task from parent compoent\n * @param {func} onDeleteTask dispatching deleteTask action\n * @param {func} onEditStatusTask dispatching editStatusTask action\n */\nconst TaskList = ({...props})=>{\n\n    return (\n\n        <PresentationTaskItem\n            task={props.task}\n            handleDeleteTask = {props.onDeleteTask}\n            handleEditStatusTask = {props.onEditStatusTask}\n            handleGetOldTask = {props.onGetOldTask}\n            handleResetForm = {props.onResetFormState}\n        >\n        </PresentationTaskItem>\n    )\n}\n\nTaskList.propTypes = {\n    task: PropTypes.object.isRequired,\n    onDeleteTask: PropTypes.func.isRequired,\n    onEditStatusTask: PropTypes.func.isRequired,\n    onGetOldTask: PropTypes.func.isRequired,\n    onResetFormState: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = state=>({\n})\n\nconst mapDispatchToProps = (dispatch, props)=>({\n    onDeleteTask: taskid=>dispatch(actions.deleteTask(taskid)),\n    onEditStatusTask: taskid=>dispatch(actions.editStatusTask(taskid)),\n    onGetOldTask: task=>{dispatch(actions.getOldTask(task))},\n\n    onResetFormState: ()=>{dispatch(actions.resetFormState())}\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TaskList)\n","import * as types from '../configs/action.types'\n\n\nexport const listAll = ()=>({\n    type: types.LIST_ALL\n})\nexport const addTask = newtask=>({\n    type: types.ADD_NEW_TASK,\n    newtask\n})\nexport const deleteTask = deletedTaskId=>({\n    type: types.DELETE_TASK,\n    deletedTaskId\n})\nexport const editStatusTask = editedStatusTaskId=>({\n    type: types.EDIT_STATUS_TASK,\n    editedStatusTaskId\n})\n\nexport const editTitleTask = editedTask=>({\n    type: types.EDIT_TITLE_TASK,\n    editedTask\n})\n\nexport const getOldTask = oldTask=>({\n    type: types.GET_OLD_TASK,\n    oldTask\n})\n\nexport const resetFormState = ()=>({\n    type: types.RESET_FORM_STATE,\n})\n","import React from 'react';\nimport { connect } from 'react-redux'\n\n// import * as actions from './../../actions'\n\nimport Divider from '@material-ui/core/Divider'\n\nimport PresentationTaskList from './tasklist'\nimport TaskItem from './../taskitem'\n\n\nconst TaskList = ({tasks})=>{\n\n    return (\n\n        <PresentationTaskList>\n            {/* {tasks.map(task=>{\n                return (\n                    <TaskItem\n                        key={task.id}\n                        task={task}\n                    ></TaskItem>\n                )\n            })} */}\n            {tasks.reduce(\n                (acc, curr)=>{\n                    if(!curr.status){\n                        acc.push(\n                            <TaskItem\n                                key={curr.id}\n                                task={curr}\n                            ></TaskItem>\n                        )\n                    }\n                    return acc\n                },\n                []\n            )}\n            <Divider light />\n            {tasks.reduce(\n                (acc, curr)=>{\n                    if(curr.status){\n                        acc.push(\n                            <TaskItem\n                                key={curr.id}\n                                task={curr}\n                            ></TaskItem>\n                        )\n                    }\n                    return acc\n                },\n                []\n            )}\n\n\n        </PresentationTaskList>\n    )\n}\n\nconst mapStateToProps = state=>({\n    tasks: state.taskReducer,\n})\nconst mapDispatchToProps = (dispatch, props)=>({\n\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TaskList)\n","\nconst styles = outerTheme=>({\n    textField: {\n\n    }\n})\n\nexport default styles\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { withStyles } from '@material-ui/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\n\n\nimport styles from './taskform.styles'\n\n\n\nconst PresentationTaskForm = ({...props})=>{\n    const {oldtask, classes } = props\n\n\n    const [title, setTitle] = useState('')\n\n\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n    //     if (!title) return;\n    //     props.handleAddTask(title)\n    //     setTitle('') // reset state component\n    // };\n\n    const handleSubmit = useCallback(\n        e=>{\n            e.preventDefault();\n            if (!title) return;\n            if(oldtask.id!==''){\n                // update task\n                props.handleEditTitleTask({id: oldtask.id, title: title})\n                props.handleResetFormState()\n                // console.log('oldtask')\n            }else {\n                // add new task\n                console.log('newtask')\n                props.handleAddTask(title)\n\n            }\n            setTitle('') // reset state component\n\n        },\n        [props, oldtask, title]\n    )\n\n    // old: ok\n    // const handleInputValue = e=>{\n    //     setTitle(e.target.value)\n    //     // console.log(title)\n    // }\n    // new\n    const handleInputValue = useCallback(\n        // updates \"value\" with event.target.value\n        ({ target: { value } }) => setTitle(value),\n        []\n    );\n\n\n\n    useEffect(\n        () => {\n            console.log('render form!');\n\n            // setTitle(oldtask.title)\n            // console.log(oldtask.title)\n            // console.log(title)\n            if(oldtask && oldtask.title!==''){\n                console.log('oldtask.title')\n                setTitle(oldtask.title)\n                // console.log(oldtask.title)\n                // console.log(title)\n\n            } else {\n                setTitle('') // reset input vaalue if dont editing title\n            }\n        },\n        [oldtask]\n    );\n\n    // componentDidMount\n    // useEffect(() => console.log('mounted'), []);\n\n    // componentDidUpdate\n    // useEffect(() => console.log('mounted or updated'));\n\n    // componentWillMount and componentWillUnmount\n    // useEffect(\n    //     () => {\n    //         effect\n    //         return () => {\n    //             cleanup\n    //         };\n    //     },\n    //     [] // Only Run on Mount and Unmount\n    // )\n\n    // componentWillUnmount\n    // the returned function will be called\n    // before the component is removed from the UI.\n    // useEffect(() => {\n    //     return () => {\n    //       console.log('will unmount');\n    //     }\n    // }, []);\n\n\n    return (\n        <Grid container justify=\"center\" spacing={3}>\n\n            <Grid item xs={6}>\n\n                <form\n                    className={classes.addform}\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        placeholder=\"Placeholder\"\n                        helperText=\"Type new task name and hit enter key. 🧡. For a nice day.\"\n\n                        id=\"add-new-task\"\n                        label=\"Title\"\n                        className={classes.textField}\n                        value={title}\n                        onChange={handleInputValue}\n                    />\n                </form>\n                <h1>{oldtask.title}</h1>\n                <p>{oldtask.id}</p>\n            </Grid>\n\n        </Grid>\n    )\n}\n\n\n\n\nexport default withStyles(styles)(PresentationTaskForm)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../actions'\n\nimport PresentationTaskForm from './taskform'\n// import PresentationTaskForm from './taskform.class'\n\n\n/**\n *\n * @param {func} onAddTask dispatching addTask action\n * @param {func} handleEditTitleTask dispatching edited title task action\n */\nconst TaskForm = ({...props})=>{\n    return (\n        <PresentationTaskForm\n            oldtask={props.oldtask}\n            handleAddTask = {props.onAddTask}\n            handleEditTitleTask = {props.onEditTitleTask}\n            handleResetFormState = {props.onResetFormState}\n        ></PresentationTaskForm>\n    )\n}\n\nTaskForm.defaultProps = {\n    oldtask: {\n        id: '',\n        title: ''\n    }\n  };\n\nTaskForm.propTypes = {\n    oldtask: PropTypes.object.isRequired,\n    onAddTask: PropTypes.func.isRequired,\n    onEditTitleTask: PropTypes.func.isRequired,\n    onResetFormState: PropTypes.func.isRequired,\n\n}\n\n\n\nconst mapStateToProps = state=>({\n    oldtask: state.oldtaskReducer,\n})\n\nconst mapDispatchToProps = (dispatch, props)=>({\n    onAddTask: task=>dispatch(actions.addTask(task)),\n    onEditTitleTask: task=>dispatch(actions.editTitleTask(task)),\n    onResetFormState: ()=>{dispatch(actions.resetFormState())}\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TaskForm)\n","const styles = outerTheme=>({\n    link: {},\n    bottom: {\n        background: outerTheme.palette.secondary.main,\n    },\n    icon: {\n        color: outerTheme.palette.primary.main,\n    }\n})\n\nexport default styles\n","import React from 'react'\n\n\nimport { withStyles } from '@material-ui/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport HomeIcon from '@material-ui/icons/Home'\n\n\n\n\n\nimport styles from './footer.styles'\n\n\n\nconst MyFooter = ({classes})=>{\n    // const homeUrl = '/'\n    return (\n        <Grid container justify=\"center\" spacing={3}>\n\n\n            <Grid item xs={6}>\n\n\n                <BottomNavigation\n                    // value={value}\n                    // onChange={(event, newValue) => {\n                    //     setValue(newValue);\n                    // }}\n\n                    className={classes.bottom}\n                >\n\n                    <BottomNavigationAction\n                        label=\"Home\"\n                        icon={<HomeIcon />}\n                        className={classes.icon}\n                    />\n\n                </BottomNavigation>\n\n            </Grid>\n\n        </Grid>\n    )\n}\n\n\nexport default withStyles(styles)(MyFooter)\n","\n\n// const theme = {\n//     mybackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n// }\n\n\n\n\n// Customize Material-UI with your theme\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\n\nconst theme = createMuiTheme({\n    breakpoints: {},\n\n    direction: \"ltr\",\n\n    mixins: {},\n    overrides: {},\n\n    palette: {\n        primary: {main: '#9C27B0',},\n        secondary: {main: '#9E9E9E',},\n        action: { main: '#11cb5f' },\n        error: red,\n        inherit: {main: '#9E9E9E',},\n        disabled: {main: '#9E9E9E',},\n    },\n\n    props: {},\n\n    // shadows: ,\n\n    typography: {},\n\n    // spacing: 4,\n    // spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n    spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy),\n\n    shape: {},\n\n    transitions: {},\n\n    zIndex: {},\n});\n\n\n\n\nexport default theme\n","\n\nconst styles = ()=>({\n\n})\n\n\nexport default styles\n","import React from 'react';\n\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport { withStyles, ThemeProvider } from '@material-ui/styles'\n\n\n\nimport myReducer from './../../reducers';\n\nimport TaskList from './../tasklist'\nimport TaskForm from './../taskform'\n\nimport Footer from './../footer'\n\n\n\n\nimport theme from './../../theming/app.theme'\nimport styles from './styles'\n\n\n\n\n\nconst store = createStore(myReducer)\n\n\n\nconst App = ({classes})=>{\n    return <Provider store={store}>\n\n        <ThemeProvider theme={theme}>\n\n            <div className={classes.root}>\n\n\n                <TaskForm></TaskForm>\n                <TaskList></TaskList>\n\n                <Footer></Footer>\n\n\n            </div>\n\n        </ThemeProvider>\n\n\n    </Provider>\n}\n\n\n// export default App\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}